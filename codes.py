# -*- coding: utf-8 -*-
"""Ciphera.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zYZHLz_LkwdHd3gpyTlB6G_YrlIHPHkU

##Linking Drive
"""

!pip install nbstripout

!!pip install git+https://github.com/openai/whisper.git
import whisper

from google.colab import drive
drive.mount('/content/drive')

!nbstripout /content/drive/MyDrive/Colab\ Notebooks/Ciphera.ipyn

"""##Importing Libraries"""

import cv2
from ultralytics import YOLO
import nudenet
from nudenet import NudeDetector
import os
from moviepy.editor import VideoFileClip
import speech_recognition as sr
from transformers import pipeline
import whisper

"""##Loading Datasets"""

import kagglehub
path = kagglehub.dataset_download("playlist/men-women-classification")
print("Path to dataset files:", path)

"""##Foul Language Detection"""

file_path = '/content/drive/MyDrive/Abuse.mp4'
print('File Exists', os.path.exists(file_path))

video_path = '/content/drive/MyDrive/Abuse.mp4'
audio_output = "extracted_audio.wav"

print("üé¨ Extracting audio from video...")

video = VideoFileClip(video_path)
video.audio.write_audiofile(audio_output)

print("üó£Ô∏è Transcribing audio...")

model=whisper.load_model("large")
result = model.transcribe(audio_output, language = "en")
transcription = result["text"]

print("Transcription: ", transcription)

if transcription:
    print("ü§ñ Detecting foul language using BERT...")

    classifier = pipeline("text-classification", model="unitary/toxic-bert")
    results = classifier(transcription)

    foul_labels = ['toxic', 'obscene', 'insult', 'threat']
    foul_detected = False

    for res in results:
        label = res['label'].lower()
        score = res['score']
        print(f"üîç {label} ‚Üí Score: {score:.2f}")
        if label in foul_labels and score > 0.1:
            foul_detected = True

    if foul_detected:
        print("üîû Foul language detected in the video!")
    else:
        print("‚úÖ No foul language detected.")
else:
    print("‚ö†Ô∏è Skipping BERT classification due to transcription issue.")

"""##NSFW Image Detection"""

from nudenet import NudeDetector
Detect = NudeDetector()
result = Detect.detect("/content/drive/MyDrive/girl.webp")

print(result)

file_path = '/content/drive/MyDrive/download.'
print('File Exists', os.path.exists(file_path))

result1 = Detect.detect("/content/drive/MyDrive/download.jpg")
